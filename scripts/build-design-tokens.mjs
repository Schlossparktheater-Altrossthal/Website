import fs from "node:fs";
import path from "node:path";

const projectRoot = process.cwd();
const tokensPath = path.resolve(projectRoot, "src/design-system/tokens.json");
const outputPath = path.resolve(projectRoot, "src/app/design-tokens.css");

if (!fs.existsSync(tokensPath)) {
  console.error(`Design tokens not found at ${tokensPath}`);
  process.exit(1);
}

const raw = fs.readFileSync(tokensPath, "utf8");
const tokens = JSON.parse(raw);

const { radius, modes } = tokens;

if (!modes?.light || !modes?.dark) {
  console.error("Design token file must contain light and dark modes.");
  process.exit(1);
}

const toVariableLines = (record) =>
  Object.entries(record)
    .map(([name, value]) => `  --${name}: ${value};`)
    .join("\n");

const radiusLine = radius?.base ? `  --radius: ${radius.base};\n` : "";

const lightBlock = toVariableLines(modes.light);
const darkBlock = toVariableLines(modes.dark);

const fileHeader = `/**
 * Auto-generated by scripts/build-design-tokens.mjs
 * Do not edit this file directly. Update src/design-system/tokens.json instead.
 */`;

const css = `${fileHeader}\n\n:root {\n${radiusLine}${lightBlock}\n}\n\n.dark {\n${darkBlock}\n}\n`;

fs.writeFileSync(outputPath, css);
console.log(`Design tokens written to ${path.relative(projectRoot, outputPath)}`);
