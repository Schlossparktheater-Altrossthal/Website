name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: docker.io
  WEBSITE_IMAGE_NAME: limitlessgreen/theater_website
  REALTIME_IMAGE_NAME: limitlessgreen/theater_realtime

jobs:
  build-and-push-website:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - environment: dev
            dockerfile: Dockerfile
            build_args: NODE_ENV=development
            metadata_tags: |
              type=raw,value=dev
              type=sha,prefix=dev-
          - environment: prod
            dockerfile: Dockerfile.prod
            build_args: NODE_ENV=production
            metadata_tags: |
              type=raw,value=prod
              type=sha,prefix=prod-
    name: Build and Push Website Docker Image (${{ matrix.environment }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Extract Docker metadata (${{ matrix.environment }})
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.WEBSITE_IMAGE_NAME }}
          tags: ${{ matrix.metadata_tags }}

      - name: Build and push ${{ matrix.environment }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.build_args }}

  build-and-push-realtime:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - environment: dev
            build_args: NODE_ENV=development
            metadata_tags: |
              type=raw,value=dev
              type=sha,prefix=dev-
          - environment: prod
            build_args: NODE_ENV=production
            metadata_tags: |
              type=raw,value=prod
              type=sha,prefix=prod-
    name: Build and Push Realtime Docker Image (${{ matrix.environment }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Extract Docker metadata (${{ matrix.environment }})
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REALTIME_IMAGE_NAME }}
          tags: ${{ matrix.metadata_tags }}

      - name: Build and push ${{ matrix.environment }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./realtime-server
          file: realtime-server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.build_args }}
