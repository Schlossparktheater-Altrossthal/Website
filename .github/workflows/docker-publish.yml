name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/docker-publish.yml'
      - 'Dockerfile.dev'
      - 'Dockerfile.prod'
      - 'docker-compose*.yml'
      - 'package.json'
      - 'package-lock.json'
      - 'pnpm-lock.yaml'
      - 'next.config.ts'
      - 'tsconfig.json'
      - 'postcss.config.mjs'
      - 'tailwind.config.js'
      - 'eslint.config.mjs'
      - 'vitest.config.ts'
      - 'components.json'
      - 'src/**'
      - 'public/**'
      - 'prisma/**'
      - 'realtime-server/**'
      - 'scripts/**'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  WEBSITE_IMAGE_NAME: limitlessgreen/theater_website

jobs:
  build-and-push-website:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - environment: dev
            dockerfile: Dockerfile.dev
            build_args: |
              NODE_ENV=development
              GIT_COMMIT_SHA=${{ github.sha }}
            metadata_tags: |
              type=raw,value=dev
              type=sha,prefix=dev-
          - environment: prod
            dockerfile: Dockerfile.prod
            build_args: |
              NODE_ENV=production
              GIT_COMMIT_SHA=${{ github.sha }}
            metadata_tags: |
              type=raw,value=prod
              type=sha,prefix=prod-
    name: Build and Push Theater Website Image (${{ matrix.environment }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Extract Docker metadata (${{ matrix.environment }})
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.WEBSITE_IMAGE_NAME }}
          tags: ${{ matrix.metadata_tags }}

      - name: Build and push ${{ matrix.environment }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.build_args }}
          cache-from: type=registry,ref=${{ env.WEBSITE_IMAGE_NAME }}:${{ matrix.environment }}-buildcache
          cache-to: type=registry,ref=${{ env.WEBSITE_IMAGE_NAME }}:${{ matrix.environment }}-buildcache,mode=max,oci-mediatypes=true
